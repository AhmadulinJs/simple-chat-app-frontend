[{"C:\\project\\simple-chat-app-frontend\\src\\index.js":"1","C:\\project\\simple-chat-app-frontend\\src\\reportWebVitals.js":"2","C:\\project\\simple-chat-app-frontend\\src\\App.js":"3","C:\\project\\simple-chat-app-frontend\\src\\components\\ChatApp\\ChatAppComonents.js":"4","C:\\project\\simple-chat-app-frontend\\src\\components\\ChatMessageComponent\\ChatMessageComponent.js":"5","C:\\project\\simple-chat-app-frontend\\src\\components\\ChatListComponent\\ChatListComponent.js":"6","C:\\project\\simple-chat-app-frontend\\src\\components\\ChatInputComponent\\ChatInputComponent.js":"7","C:\\project\\simple-chat-app-frontend\\src\\containers\\ChatListItem\\ChatListItem.js":"8","C:\\project\\simple-chat-app-frontend\\src\\containers\\ChatMessageBox\\ChatMessageBox.js":"9"},{"size":517,"mtime":1611660243897,"results":"10","hashOfConfig":"11"},{"size":375,"mtime":1611660243897,"results":"12","hashOfConfig":"11"},{"size":365,"mtime":1611660243894,"results":"13","hashOfConfig":"11"},{"size":3347,"mtime":1611673228897,"results":"14","hashOfConfig":"11"},{"size":2135,"mtime":1611673265626,"results":"15","hashOfConfig":"11"},{"size":1934,"mtime":1611673352668,"results":"16","hashOfConfig":"11"},{"size":2253,"mtime":1611668123404,"results":"17","hashOfConfig":"11"},{"size":3544,"mtime":1611671774200,"results":"18","hashOfConfig":"11"},{"size":1811,"mtime":1611668293730,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"2jzkgu",{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"22"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"30","messages":"31","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"32","messages":"33","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"34","messages":"35","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"22"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"22"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"22"},"C:\\project\\simple-chat-app-frontend\\src\\index.js",[],["43","44"],"C:\\project\\simple-chat-app-frontend\\src\\reportWebVitals.js",[],"C:\\project\\simple-chat-app-frontend\\src\\App.js",["45","46"],"import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport Button from '@material-ui/core/Button';\r\nimport { Box } from '@material-ui/core';\r\nimport ChatAppComonents from \"./components/ChatApp/ChatAppComonents\";\r\n\r\nfunction App() {\r\n  return (\r\n    <Box style={{overflow: \"hidden\"}}>\r\n      <ChatAppComonents />\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default App","C:\\project\\simple-chat-app-frontend\\src\\components\\ChatApp\\ChatAppComonents.js",["47","48"],"C:\\project\\simple-chat-app-frontend\\src\\components\\ChatMessageComponent\\ChatMessageComponent.js",["49","50","51"],"C:\\project\\simple-chat-app-frontend\\src\\components\\ChatListComponent\\ChatListComponent.js",["52"],"C:\\project\\simple-chat-app-frontend\\src\\components\\ChatInputComponent\\ChatInputComponent.js",["53"],"import React from 'react'\r\nimport ReactDom from 'react-dom'\r\nimport { Box, Divider, Grid, IconButton, TextField } from '@material-ui/core'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\n\r\n// ICONS\r\nimport InsertEmoticonIcon from '@material-ui/icons/InsertEmoticon';\r\nimport InsertDriveFileIcon from '@material-ui/icons/InsertDriveFile';\r\nimport NearMeIcon from '@material-ui/icons/NearMe';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        backgroundColor: 'rgba(30, 39, 46,.98)',\r\n        bottom: 0,\r\n        //   width: \"initial\",\r\n    },\r\n    emojiBtn: {\r\n        fontSize: \"30px\",\r\n        color: \"#7f8c8d\"\r\n    },\r\n    customStyleTextField: {\r\n        color: \"#fff\",\r\n        width: \"100%\"\r\n    }\r\n}));\r\n\r\nfunction ChatInputComponent() {\r\n    const classes = useStyles()\r\n\r\n    return (\r\n        <Box className={classes.root} pb={1} width=\"100%\">\r\n            <Box mb={1}>\r\n                <Divider style={{ backgroundColor: \"#7f8c8d\" }} />\r\n            </Box>\r\n\r\n            <Box pl={2} pr={2}>\r\n                <Grid item container direction=\"row\" justify=\"space-around\" alignItems=\"center\" spacing={1} wrap=\"nowrap\">\r\n                    <Grid item >\r\n                        <IconButton color=\"primary\">\r\n                            <InsertDriveFileIcon className={classes.emojiBtn} />\r\n                        </IconButton>\r\n                    </Grid>\r\n\r\n                    <Grid item xs={10}>\r\n                        <TextField placeholder=\"Write a message..\" style={{ color: \"#fff\" }} fullWidth InputProps={{\r\n                            className: classes.customStyleTextField\r\n                        }} />\r\n                    </Grid>\r\n                    <Grid item >\r\n                        <IconButton color=\"primary\">\r\n                            <InsertEmoticonIcon className={classes.emojiBtn} />\r\n                        </IconButton>\r\n                    </Grid>\r\n                    <Grid item >\r\n                        <IconButton color=\"primary\">\r\n                            <NearMeIcon className={classes.emojiBtn} />\r\n                        </IconButton>\r\n                    </Grid>\r\n                </Grid>\r\n            </Box>\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default ChatInputComponent","C:\\project\\simple-chat-app-frontend\\src\\containers\\ChatListItem\\ChatListItem.js",["54","55","56"],"import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Avatar, Box, Divider, Grid, Typography, Badge } from '@material-ui/core';\r\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\r\nimport Link from '@material-ui/core/Link';\r\n\r\n\r\nconst StyledBadge = withStyles((theme) => ({\r\n  badge: {\r\n    backgroundColor: '#44b700',\r\n    color: '#44b700',\r\n    boxShadow: `0 0 0 2px ${theme.palette.background.paper}`,\r\n    '&::after': {\r\n      position: 'absolute',\r\n      top: 0,\r\n      left: 0,\r\n      width: '100%',\r\n      height: '100%',\r\n      borderRadius: '50%',\r\n      animation: '$ripple 1.2s infinite ease-in-out',\r\n      border: '1px solid currentColor',\r\n      content: '\"\"',\r\n    },\r\n  },\r\n  '@keyframes ripple': {\r\n    '0%': {\r\n      transform: 'scale(.8)',\r\n      opacity: 1,\r\n    },\r\n    '100%': {\r\n      transform: 'scale(2.4)',\r\n      opacity: 0,\r\n    },\r\n  },\r\n}))(Badge);\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    color: \"#fff\",\r\n    '&:hover': {\r\n      backgroundColor: \"rgb(35 54 73)\"\r\n    }\r\n  },\r\n  Avatarlarge: {\r\n    width: theme.spacing(6),\r\n    height: theme.spacing(6),\r\n  },\r\n  firstNameText: {\r\n    display: \"-webkit-box\",\r\n    overflow: 'hidden',\r\n    textOverflow: 'ellipsis',\r\n    whiteSpace: 'normal',\r\n    '-webkit-line-clamp': 1,\r\n    '-webkit-box-orient': 'vertical'\r\n  },\r\n\r\n  linkItem: {\r\n    textDecoration: \"none\",\r\n    color: \"#fff\",\r\n\r\n    '&:hover': {\r\n      textDecoration: \"none\"\r\n    }\r\n  },\r\n  onlineTextStyle: {\r\n    color: \"#27ae60\",\r\n  },\r\n\r\n}));\r\n\r\nfunction ChatListItem(props) {\r\n  const classes = useStyles()\r\n  return (\r\n    <Grid item className={classes.root}>\r\n      <Link href=\"#\" className={classes.linkItem}>\r\n        <Box p={1.5}>\r\n          <Grid wrap=\"nowrap\" container container direction=\"row\" wrap=\"nowrap\" justif=\"center\" alignItems=\"center\" spacing={1}>\r\n            <Box mr={1}>\r\n              <Grid>\r\n                {props.online ? <StyledBadge\r\n                  overlap=\"circle\"\r\n                  anchorOrigin={{\r\n                    vertical: 'bottom',\r\n                    horizontal: 'right',\r\n                  }}\r\n                  variant=\"dot\"\r\n                >\r\n                  <Avatar src={props.userPhotoUrl} className={classes.Avatarlarge} />\r\n                </StyledBadge>\r\n                  : <Avatar src={props.userPhotoUrl} className={classes.Avatarlarge} />}\r\n              </Grid>\r\n            </Box>\r\n            <Grid item xs={9} container direction=\"column\" justify=\"center\" >\r\n              <Grid item>\r\n                <Typography className={classes.firstNameText} variant=\"body1\">\r\n                  {props.firstName} {props.lastName}\r\n                </Typography>\r\n              </Grid>\r\n              <Grid item>\r\n                <Typography variant=\"body2\" className={classes.firstNameText}>\r\n                  {props.lastCamingMssg}\r\n                </Typography>\r\n              </Grid>\r\n            </Grid>\r\n            <Grid item xs={3} container direction=\"column\" justify=\"flex-end\" alignItems=\"flex-end\">\r\n              <Grid item>\r\n                {props.unreadMessagesCount && props.unreadMessagesCount !== \"0\" ?\r\n                  <Box mr={1}>\r\n                    <Badge badgeContent={props.unreadMessagesCount} color=\"primary\" />\r\n                  </Box>\r\n                  : null}\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n        </Box>\r\n        <Divider style={{ background: \"#535c68\" }} />\r\n      </Link>\r\n\r\n    </Grid>\r\n  );\r\n}\r\n\r\nexport default ChatListItem","C:\\project\\simple-chat-app-frontend\\src\\containers\\ChatMessageBox\\ChatMessageBox.js",["57"],"import React from 'react'\r\nimport ReactDom from 'react-dom'\r\nimport { Box, Grid, Typography } from '@material-ui/core'\r\nimport DoneIcon from '@material-ui/icons/Done';\r\nimport DoneAllIcon from '@material-ui/icons/DoneAll';\r\n\r\nimport { makeStyles } from '@material-ui/core/styles'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        width: \"fit-content\",\r\n        color: \"#eee\",\r\n    },\r\n    messageBox: {\r\n        backgroundColor: \"rgb(44, 62, 80)\",\r\n        color: \"#fff\",\r\n        borderRadius: \"4px\",\r\n\r\n    },\r\n    doneIconSizing: {\r\n        fontSize: \"18px\",\r\n        color: \"#7f8c8d\"\r\n    }\r\n}))\r\n\r\nexport default function ChatMessageBox(props) {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <Grid item container direction=\"column\" alignItems={props.position === 'left' ? 'flex-end' : 'flex-start'}>\r\n            <Grid className={classes.root} xs={10}>\r\n                <Box mb={1} ml={1} mr={1} mt={1}>\r\n                    <Grid item >\r\n                        <Box p={1.5} boxShadow={2} className={classes.messageBox}>\r\n                            <Grid container direction=\"row\" wrap=\"nowrap\" alignItems=\"flex-end\" spacing={1}>\r\n                                <Grid item>\r\n                                    <Typography>{props.text}</Typography>\r\n                                </Grid>\r\n                                <Grid item>\r\n                                    {props.see ? <DoneAllIcon className={classes.doneIconSizing} /> : <DoneIcon className={classes.doneIconSizing} />}\r\n                                </Grid>\r\n                            </Grid>\r\n                        </Box>\r\n                    </Grid>\r\n                    <Typography variant=\"body2\">{props.time}</Typography>\r\n                </Box>\r\n            </Grid>\r\n        </Grid>\r\n    )\r\n}",{"ruleId":"58","replacedBy":"59"},{"ruleId":"60","replacedBy":"61"},{"ruleId":"62","severity":1,"message":"63","line":2,"column":8,"nodeType":"64","messageId":"65","endLine":2,"endColumn":16},{"ruleId":"62","severity":1,"message":"66","line":3,"column":8,"nodeType":"64","messageId":"65","endLine":3,"endColumn":14},{"ruleId":"62","severity":1,"message":"63","line":2,"column":8,"nodeType":"64","messageId":"65","endLine":2,"endColumn":16},{"ruleId":"62","severity":1,"message":"66","line":6,"column":3,"nodeType":"64","messageId":"65","endLine":6,"endColumn":9},{"ruleId":"62","severity":1,"message":"67","line":2,"column":8,"nodeType":"64","messageId":"65","endLine":2,"endColumn":16},{"ruleId":"62","severity":1,"message":"68","line":3,"column":15,"nodeType":"64","messageId":"65","endLine":3,"endColumn":19},{"ruleId":"62","severity":1,"message":"69","line":6,"column":8,"nodeType":"64","messageId":"65","endLine":6,"endColumn":26},{"ruleId":"62","severity":1,"message":"63","line":2,"column":8,"nodeType":"64","messageId":"65","endLine":2,"endColumn":16},{"ruleId":"62","severity":1,"message":"67","line":2,"column":8,"nodeType":"64","messageId":"65","endLine":2,"endColumn":16},{"ruleId":"62","severity":1,"message":"63","line":2,"column":8,"nodeType":"64","messageId":"65","endLine":2,"endColumn":16},{"ruleId":"70","severity":1,"message":"71","line":77,"column":41,"nodeType":"72","endLine":77,"endColumn":50},{"ruleId":"70","severity":1,"message":"71","line":77,"column":67,"nodeType":"72","endLine":77,"endColumn":80},{"ruleId":"62","severity":1,"message":"67","line":2,"column":8,"nodeType":"64","messageId":"65","endLine":2,"endColumn":16},"no-native-reassign",["73"],"no-negated-in-lhs",["74"],"no-unused-vars","'ReactDOM' is defined but never used.","Identifier","unusedVar","'Button' is defined but never used.","'ReactDom' is defined but never used.","'Grid' is defined but never used.","'ChatInputComponent' is defined but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","no-global-assign","no-unsafe-negation"]